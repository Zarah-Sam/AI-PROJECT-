
# ✅ Install and import everything needed (Colab has most by default)
import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files

# ✅ Upload your reference and test images
print("📂 Please upload a CLEAR EMPTY BIN image")
empty_upload = files.upload()

print("\n📂 Please upload a CLEAR FULL BIN image")
full_upload = files.upload()

print("\n📂 Now upload a TEST BIN image to classify")
test_upload = files.upload()

# ✅ Get filenames
empty_img_path = list(empty_upload.keys())[0]
full_img_path = list(full_upload.keys())[0]
test_img_path = list(test_upload.keys())[0]

# ✅ Read and resize to same size for comparison
def read_and_resize(path):
    img = cv2.imread(path)
    img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)  # Convert to grayscale for simplicity
    img = cv2.resize(img, (200, 200))  # Resize to common size
    return img

empty_img = read_and_resize(empty_img_path)
full_img = read_and_resize(full_img_path)
test_img = read_and_resize(test_img_path)

# ✅ Show the three images side-by-side for confirmation
fig, axs = plt.subplots(1, 3, figsize=(12, 4))
axs[0].imshow(empty_img, cmap='gray')
axs[0].set_title('Reference: Empty Bin')
axs[0].axis('off')

axs[1].imshow(full_img, cmap='gray')
axs[1].set_title('Reference: Full Bin')
axs[1].axis('off')

axs[2].imshow(test_img, cmap='gray')
axs[2].set_title('Test Image')
axs[2].axis('off')

plt.show()

# ✅ Compare using simple pixel-wise Mean Squared Error (MSE)
def mse(imgA, imgB):
    err = np.sum((imgA.astype("float") - imgB.astype("float")) ** 2)
    err /= float(imgA.shape[0] * imgA.shape[1])
    return err

error_to_empty = mse(test_img, empty_img)
error_to_full = mse(test_img, full_img)

print("\n🔍 Similarity check (Higher means MORE SIMILAR):")
print(f" - Compared to EMPTY: {error_to_empty:.2f}")
print(f" - Compared to FULL : {error_to_full:.2f}")

# ✅ Final decision
if error_to_empty > error_to_full:
    print("\n✅ RESULT: Bin is EMPTY ✔️")
else:
    print("\n🟥 RESULT: Bin is FULL 🚮")
